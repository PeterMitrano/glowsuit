# Copyright (c) 2020 Arduino CMake Toolchain

if (DEFINED ENV{SERIAL_PORT} AND UPLOAD_SERIAL_PATTERN)
	string(REPLACE "{serial.port}" "$ENV{SERIAL_PORT}" UPLOAD_PATTERN "${UPLOAD_SERIAL_PATTERN}")
elseif(DEFINED ENV{NETWORK_PORT} AND UPLOAD_NETWORK_PATTERN)
	string(REPLACE ":" ";" network_addr "$ENV{NETWORK_PORT}")
	list(LENGTH network_addr len)
	list(GET network_addr 0 network_ip)
	if("${len}" GREATER 1)
		list(GET network_addr 1 network_port)
	else()
		set(network_port 0)
	endif()
	string(REPLACE "{serial.port}" "${network_ip}" UPLOAD_PATTERN "${UPLOAD_NETWORK_PATTERN}")
	string(REPLACE "{network.port}" "${network_port}" UPLOAD_PATTERN "${UPLOAD_PATTERN}")
	string(REPLACE "{network.password}" "$ENV{NETWORK_PASSWORD}" UPLOAD_PATTERN "${UPLOAD_PATTERN}")
else()
	if (NOT MAKE_PROGRAM)
		set(MAKE_PROGRAM "<make>")
	endif()

	if (UPLOAD_SERIAL_PATTERN AND UPLOAD_NETWORK_PATTERN)
		set(usage_str "(SERIAL|NETWORK)")
	elseif(UPLOAD_NETWORK_PATTERN)
		set(usage_str "NETWORK")
	else()
		set(usage_str "SERIAL")
	endif()

	message(FATAL_ERROR "Port is not provided\n"
		"Usage: '${MAKE_PROGRAM} ${usage_str}_PORT=<port> upload-${TARGET}'")
endif()

# message("Execute: \"${UPLOAD_PATTERN}\"")
separate_arguments(cmd_pattern UNIX_COMMAND "${UPLOAD_PATTERN}")
# message("Execute: \"${cmd_pattern}\"")
execute_process(COMMAND ${cmd_pattern} OUTPUT_VARIABLE output ERROR_VARIABLE output RESULT_VARIABLE result)
# message("Result: \"${result}\"")
if (NOT "${result}" EQUAL 0)
	message(SEND_ERROR ${output})
else()
	message(STATUS ${output})
endif()

